$date
	Fri Apr 22 11:59:41 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alutest $end
$var wire 8 ! O0 [7:0] $end
$var reg 8 " A [7:0] $end
$var reg 8 # B [7:0] $end
$var reg 4 $ CTR [3:0] $end
$var reg 1 % ck $end
$scope module ALU $end
$var wire 8 & A [7:0] $end
$var wire 8 ' B [7:0] $end
$var wire 4 ( CTR [3:0] $end
$var wire 1 % ck $end
$var wire 8 ) out [7:0] $end
$var reg 4 * C [3:0] $end
$var reg 8 + INA [7:0] $end
$var reg 8 , INB [7:0] $end
$var reg 8 - O [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
0%
bx $
bx #
bx "
bx !
$end
#10
b0 !
b0 )
b0 -
1%
#20
b1001 $
b1001 (
b10000001 #
b10000001 '
b100100 "
b100100 &
0%
#30
b1001 *
b10000001 ,
b100100 +
1%
#40
b1101 $
b1101 (
b1101 #
b1101 '
b1100011 "
b1100011 &
0%
#50
b1101 *
b1101 ,
b1100011 +
b10100101 !
b10100101 )
b10100101 -
1%
#60
b1 $
b1 (
b10010 #
b10010 '
b1100101 "
b1100101 &
0%
#70
b1 *
b10010 ,
b1100101 +
b11000110 !
b11000110 )
b11000110 -
1%
#80
b1101 $
b1101 (
b1110110 #
b1110110 '
b1101 "
b1101 &
0%
#90
b1101 *
b1110110 ,
b1101 +
b1010011 !
b1010011 )
b1010011 -
1%
#100
b1001 $
b1001 (
b10001100 #
b10001100 '
b11101101 "
b11101101 &
0%
#110
b1001 *
b10001100 ,
b11101101 +
b11010 !
b11010 )
b11010 -
1%
#120
b1010 $
b1010 (
b11000101 #
b11000101 '
b11000110 "
b11000110 &
0%
#130
b1010 *
b11000101 ,
b11000110 +
b11101101 !
b11101101 )
b11101101 -
1%
#140
b10 $
b10 (
b1110111 #
b1110111 '
b11100101 "
b11100101 &
0%
#150
b10 *
b1110111 ,
b11100101 +
b11 !
b11 )
b11 -
1%
#160
b1110 $
b1110 (
b11110010 #
b11110010 '
b10001111 "
b10001111 &
0%
#170
b1110 *
b11110010 ,
b10001111 +
b0 !
b0 )
b0 -
1%
#180
b1100 $
b1100 (
b11000101 #
b11000101 '
b11101000 "
b11101000 &
0%
#190
b1100 *
b11000101 ,
b11101000 +
b11000111 !
b11000111 )
b11000111 -
1%
#200
b101 $
b101 (
b101101 #
b101101 '
b10111101 "
b10111101 &
0%
#210
b101 *
b101101 ,
b10111101 +
b1110100 !
b1110100 )
b1110100 -
1%
#220
b0 $
b0 (
b1010 #
b1010 '
b1100011 "
b1100011 &
0%
#230
b0 *
b1010 ,
b1100011 +
b0 !
b0 )
b0 -
1%
#240
b1101 $
b1101 (
b10101010 #
b10101010 '
b100000 "
b100000 &
0%
#250
b1101 *
b10101010 ,
b100000 +
b1101101 !
b1101101 )
b1101101 -
1%
#260
b10011 #
b10011 '
b10010110 "
b10010110 &
0%
#270
b10011 ,
b10010110 +
b1000000 !
b1000000 )
b1000000 -
1%
#280
b101 $
b101 (
b1101011 #
b1101011 '
b1010011 "
b1010011 &
0%
#290
b101 *
b1101011 ,
b1010011 +
b101100 !
b101100 )
b101100 -
1%
#300
b1101 $
b1101 (
b10101110 #
b10101110 '
b10 "
b10 &
0%
#310
b1101 *
b10101110 ,
b10 +
b0 !
b0 )
b0 -
1%
#320
b1010 $
b1010 (
b100011 #
b100011 '
b11001111 "
b11001111 &
0%
#330
b1010 *
b100011 ,
b11001111 +
b100 !
b100 )
b100 -
1%
#340
b10 $
b10 (
b111100 #
b111100 '
b11001010 "
b11001010 &
0%
#350
b10 *
b111100 ,
b11001010 +
b11101100 !
b11101100 )
b11101100 -
1%
#360
b1000 $
b1000 (
b1000001 #
b1000001 '
b10001010 "
b10001010 &
0%
#370
b1000 *
b1000001 ,
b10001010 +
b0 !
b0 )
b0 -
1%
#380
b1011 $
b1011 (
b10001001 #
b10001001 '
b1111000 "
b1111000 &
0%
#390
b1011 *
b10001001 ,
b1111000 +
1%
#400
b1110 $
b1110 (
b11000110 #
b11000110 '
b10110110 "
b10110110 &
0%
#410
b1110 *
b11000110 ,
b10110110 +
b10000111 !
b10000111 )
b10000111 -
1%
#420
b1011 $
b1011 (
b101010 #
b101010 '
b10111100 "
b10111100 &
0%
#430
b1011 *
b101010 ,
b10111100 +
b1011011 !
b1011011 )
b1011011 -
1%
#440
b1111 $
b1111 (
b10000101 #
b10000101 '
b1110001 "
b1110001 &
0%
#450
b1111 *
b10000101 ,
b1110001 +
b1000011 !
b1000011 )
b1000011 -
1%
#460
b1110 $
b1110 (
b111010 #
b111010 '
b111011 "
b111011 &
0%
#470
b1110 *
b111010 ,
b111011 +
b11100010 !
b11100010 )
b11100010 -
1%
#480
b1001 $
b1001 (
b11110001 #
b11110001 '
b10101 "
b10101 &
0%
#490
b1001 *
b11110001 ,
b10101 +
b10011101 !
b10011101 )
b10011101 -
1%
#500
b1111 $
b1111 (
b1001100 #
b1001100 '
b1100010 "
b1100010 &
0%
#510
b1111 *
b1001100 ,
b1100010 +
b11110101 !
b11110101 )
b11110101 -
1%
#520
b111 $
b111 (
b11111000 #
b11111000 '
b10001111 "
b10001111 &
0%
#530
b111 *
b11111000 ,
b10001111 +
b11000100 !
b11000100 )
b11000100 -
1%
#540
b1011 $
b1011 (
b1011100 #
b1011100 '
b10011111 "
b10011111 &
0%
#550
b1011 *
b1011100 ,
b10011111 +
b0 !
b0 )
b0 -
1%
#560
b0 $
b0 (
b1001001 #
b1001001 '
b10001001 "
b10001001 &
0%
#570
b0 *
b1001001 ,
b10001001 +
b1100000 !
b1100000 )
b1100000 -
1%
#580
b110 $
b110 (
b1010001 #
b1010001 '
b11010111 "
b11010111 &
0%
#590
b110 *
b1010001 ,
b11010111 +
b11010010 !
b11010010 )
b11010010 -
1%
#600
b1000 $
b1000 (
b11000010 #
b11000010 '
b1100 "
b1100 &
0%
#610
b1000 *
b11000010 ,
b1100 +
b0 !
b0 )
b0 -
1%
#620
b10 $
b10 (
b111101 #
b111101 '
b1110111 "
b1110111 &
0%
#630
b10 *
b111101 ,
b1110111 +
1%
#640
b1001 $
b1001 (
b1101101 #
b1101101 '
b1111110 "
b1111110 &
0%
#650
b1001 *
b1101101 ,
b1111110 +
1%
#660
b101 $
b101 (
b11010011 #
b11010011 '
b11111 "
b11111 &
0%
#670
b101 *
b11010011 ,
b11111 +
b1111111 !
b1111111 )
b1111111 -
1%
#680
b1001 $
b1001 (
b1011011 #
b1011011 '
b1111000 "
b1111000 &
0%
#690
b1001 *
b1011011 ,
b1111000 +
b0 !
b0 )
b0 -
1%
#700
b1000 $
b1000 (
b101010 #
b101010 '
b111111 "
b111111 &
0%
#710
b1000 *
b101010 ,
b111111 +
b1111011 !
b1111011 )
b1111011 -
1%
#720
b1100 $
b1100 (
b10001110 #
b10001110 '
b10000110 "
b10000110 &
0%
#730
b1100 *
b10001110 ,
b10000110 +
b101010 !
b101010 )
b101010 -
1%
#740
b11 $
b11 (
b100110 #
b100110 '
b11111010 "
b11111010 &
0%
#750
b11 *
b100110 ,
b11111010 +
b1000011 !
b1000011 )
b1000011 -
1%
#760
b101111 #
b101111 '
b10100011 "
b10100011 &
0%
#770
b101111 ,
b10100011 +
b0 !
b0 )
b0 -
1%
#780
b111 $
b111 (
b1000100 #
b1000100 '
b1011111 "
b1011111 &
0%
#790
b111 *
b1000100 ,
b1011111 +
1%
#800
b1010 $
b1010 (
b11100110 #
b11100110 '
b11001011 "
b11001011 &
0%
#810
b1010 *
b11100110 ,
b11001011 +
1%
#820
b11101101 #
b11101101 '
b101001 "
b101001 &
0%
#830
b11101101 ,
b101001 +
b101101 !
b101101 )
b101101 -
1%
#840
b1111 $
b1111 (
b10110101 #
b10110101 '
b1100101 "
b1100101 &
0%
#850
b1111 *
b10110101 ,
b1100101 +
b11000100 !
b11000100 )
b11000100 -
1%
#860
b0 $
b0 (
b1000100 #
b1000100 '
b1111001 "
b1111001 &
0%
#870
b0 *
b1000100 ,
b1111001 +
b11001010 !
b11001010 )
b11001010 -
1%
#880
b1110 $
b1110 (
b10101011 #
b10101011 '
b101010 "
b101010 &
0%
#890
b1110 *
b10101011 ,
b101010 +
b10111101 !
b10111101 )
b10111101 -
1%
#900
b1101 $
b1101 (
b10011010 #
b10011010 '
b11011100 "
b11011100 &
0%
#910
b1101 *
b10011010 ,
b11011100 +
b10101 !
b10101 )
b10101 -
1%
#920
b1110 $
b1110 (
b1010110 #
b1010110 '
b11000011 "
b11000011 &
0%
#930
b1110 *
b1010110 ,
b11000011 +
b10111000 !
b10111000 )
b10111000 -
1%
#940
b110 $
b110 (
b1010 #
b1010 '
b1100111 "
b1100111 &
0%
#950
b110 *
b1010 ,
b1100111 +
b11100001 !
b11100001 )
b11100001 -
1%
#960
b1000 $
b1000 (
b1111001 #
b1111001 '
b111000 "
b111000 &
0%
#970
b1000 *
b1111001 ,
b111000 +
b0 !
b0 )
b0 -
1%
#980
b100 $
b100 (
b10010011 #
b10010011 '
b10010100 "
b10010100 &
0%
#990
b100 *
b10010011 ,
b10010100 +
b111000 !
b111000 )
b111000 -
1%
#1000
0%
